apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.palantir.docker"

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

def artifactName = jar.archiveName
def artifactPath = project.libsDir

def dockerRepositoryName = "augustomarinho/study"
def dockerImageName = jar.archiveName.replaceAll('.jar', '')
def dockerFilePath = rootProject.file('src/main/docker/Dockerfile').getAbsolutePath()

        println("########################################")
println("#  DEFINED VARIABLES:")
println("#  projectName: ${project.name}")
println("#")
println("#  artifactName: ${artifactName}")
println("#  artifactPath: ${artifactPath}")
println("#")
println("#  dockerImageName: ${dockerImageName}")
println("#  dockerRepositoryName: ${dockerRepositoryName}")
println("#  dockerFilePath: ${dockerFilePath}")
println("########################################")


buildscript {
    ext {
        kotlinVersion = '1.3.30'
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.17.2"
    }
}

springBoot {
    mainClassName = 'br.com.am.study.kotlin.KotlinApplication'
}

docker {
    name "${dockerRepositoryName}:${dockerImageName}"
    dockerfile rootProject.file('src/main/docker/Dockerfile')
    files tasks.jar.outputs
    buildArgs ([TARGET_DIR: "./", JAR_NAME: "${artifactName}"])
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.hsqldb:hsqldb')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}